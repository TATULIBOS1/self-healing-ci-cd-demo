name: AI-Powered Self-Healing CI/CD

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests and create logs
        id: run-tests
        run: |
          pytest --junitxml=test-results.xml -v > test_logs.txt 2>&1 || true
          grep -Ei 'FAILED|ERROR|Exception' test_logs.txt > failure_summary.txt || echo "No failures found" > failure_summary.txt
          cat failure_summary.txt
          if grep -qEi 'FAILED|ERROR|Exception' test_logs.txt; then
            echo "Tests failed"
            echo "failure=true" >> $GITHUB_ENV
          else
            echo "Tests passed"
            echo "failure=false" >> $GITHUB_ENV

      - name: Upload artifacts to S3
        if: env.failure == 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "S3_PREFIX=$GITHUB_RUN_ID/$TIMESTAMP" >> $GITHUB_ENV
          aws s3 cp test_logs.txt s3://ci-cd-demo-logs/$GITHUB_RUN_ID/$TIMESTAMP/full_logs.txt
          aws s3 cp failure_summary.txt s3://ci-cd-demo-logs/$GITHUB_RUN_ID/$TIMESTAMP/failure_summary.txt
          aws s3 cp test-results.xml s3://ci-cd-demo-logs/$GITHUB_RUN_ID/$TIMESTAMP/test_results.xml

      - name: Trigger Step Functions (AI Analysis)
        if: env.failure == 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          EXECUTION_NAME="github-$GITHUB_RUN_ID-$(date +%s)"
          echo "Triggering Step Function: $EXECUTION_NAME"
          RESPONSE=$(aws stepfunctions start-execution \
            --state-machine-arn "${{ secrets.SFN_SELF_HEALING_ARN }}" \
            --name "$EXECUTION_NAME" \
            --input "{\"s3_bucket\":\"ci-cd-demo-logs\",\"s3_prefix\":\"$GITHUB_RUN_ID/$TIMESTAMP\",\"github_run_id\":\"$GITHUB_RUN_ID\"}")
          echo "SFN_RESPONSE=$RESPONSE" >> $GITHUB_ENV
          echo $RESPONSE | jq

      - name: Display remediation output
        if: env.failure == 'true'
        run: echo "Remediation in progress via Step Functions. Check DynamoDB and CloudWatch logs."
